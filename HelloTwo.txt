000100 IDENTIFICATION DIVISION.
000110 PROGRAM-ID. COW.
 ENVIRONMENT DIVISION.
 DATA DIVISION.
 WORKING-STORAGE SECTION.
 01 NEWLINE         PIC X   VALUE X'0A'.
 01 ANALYZED-QUERY PIC X(1600).  
 01 THE-GREAT-DISPATCH.
    03  ROUTING-TABLE            OCCURS 10 TIMES.
      05   ROUTING-PATTERN   PIC X(999).
      05   ROUTING-DESTINY   PIC X(999).
 01 TESTER         PIC X(1) VALUE "N".  
 01 ANYFOUND       PIC X(1) VALUE "N".
 01 CTR            PIC 99 USAGE COMP-5.
 01 THE-VALUES.
    05 QUERY-VALUES           OCCURS 10 TIMES.
      10 QUERY-VALUE-NAME     PIC X(90).
      10 QUERY-VALUE          PIC X(90).
 PROCEDURE DIVISION.
 COPY "CONFIG.CBL".
 PERFORM WEB-HEADER.
 CALL 'GETQUERY' USING ANALYZED-QUERY.
 PERFORM VARYING CTR FROM 1 BY 1
       UNTIL CTR > 5
     CALL 'CHECKQUERY' USING ANALYZED-QUERY ROUTING-PATTERN(CTR) TESTER THE-VALUES
     IF (TESTER="Y")
        *> DISPLAY ROUTING-PATTERN(CTR) "<HR>" 
        MOVE "Y" TO ANYFOUND
        CALL ROUTING-DESTINY(CTR) USING THE-VALUES
     END-IF
 END-PERFORM
 IF (ANYFOUND="N") PERFORM BAD-QUERY-ERROR.
 *> IF (ANYFOUND="Y")  CALL 'SHOWVARS' USING THE-VALUES.  
 GOBACK.
 BAD-QUERY-ERROR.
 DISPLAY "<B>COBOL-ON-WHEELCHAIR ERROR:</B> QUERY PATTERN NOT FOUND (<I>" FUNCTION TRIM(ANALYZED-QUERY) "</I>)".
 WEB-HEADER.
       DISPLAY
           "CONTENT-TYPE: TEXT/HTML"
           NEWLINE
       END-DISPLAY.
       IDENTIFICATION DIVISION.
       PROGRAM-ID. GETQUERY.
       ENVIRONMENT DIVISION.
              INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT WEBINPUT ASSIGN TO KEYBOARD.
       DATA DIVISION.
       FILE SECTION.
       FD WEBINPUT.
          01 POSTCHUNK       PIC X(1024).
       WORKING-STORAGE SECTION.
       78 NAME-COUNT      VALUE 34.
       01 NAME-INDEX      PIC 99 USAGE COMP-5.
       01 VALUE-STRING    PIC X(256).
       01 ENVIRONMENT-NAMES.
          02 NAME-STRINGS.
             03 FILLER    PIC X(20) VALUE 'AUTH_TYPE'.
             03 FILLER    PIC X(20) VALUE 'CONTENT_LENGTH'.
             03 FILLER    PIC X(20) VALUE 'CONTENT_TYPE'.
             03 FILLER    PIC X(20) VALUE 'DOCUMENT_ROOT'.
             03 FILLER    PIC X(20) VALUE 'GATEWAY_INTERFACE'.
             03 FILLER    PIC X(20) VALUE 'HTTP_ACCEPT'.
             03 FILLER    PIC X(20) VALUE 'HTTP_ACCEPT_CHARSET'.
             03 FILLER    PIC X(20) VALUE 'HTTP_ACCEPT_ENCODING'.
             03 FILLER    PIC X(20) VALUE 'HTTP_ACCEPT_LANGUAGE'.
             03 FILLER    PIC X(20) VALUE 'HTTP_COOKIE'.
             03 FILLER    PIC X(20) VALUE 'HTTP_CONNECTION'.
             03 FILLER    PIC X(20) VALUE 'HTTP_HOST'.
             03 FILLER    PIC X(20) VALUE 'HTTP_REFERER'.
             03 FILLER    PIC X(20) VALUE 'HTTP_USER_AGENT'.
             03 FILLER    PIC X(20) VALUE 'LIB_PATH'.
             03 FILLER    PIC X(20) VALUE 'PATH'.
             03 FILLER    PIC X(20) VALUE 'PATH_INFO'.
             03 FILLER    PIC X(20) VALUE 'PATH_TRANSLATED'.
             03 FILLER    PIC X(20) VALUE 'QUERY_STRING'.
             03 FILLER    PIC X(20) VALUE 'REMOTE_ADDR'.
             03 FILLER    PIC X(20) VALUE 'REMOTE_HOST'.
             03 FILLER    PIC X(20) VALUE 'REMOTE_IDENT'.
             03 FILLER    PIC X(20) VALUE 'REMOTE_PORT'.
             03 FILLER    PIC X(20) VALUE 'REQUEST_METHOD'.
             03 FILLER    PIC X(20) VALUE 'REQUEST_URI'.
             03 FILLER    PIC X(20) VALUE 'SCRIPT_FILENAME'.
             03 FILLER    PIC X(20) VALUE 'SCRIPT_NAME'.
             03 FILLER    PIC X(20) VALUE 'SERVER_ADDR'.
             03 FILLER    PIC X(20) VALUE 'SERVER_ADMIN'.
             03 FILLER    PIC X(20) VALUE 'SERVER_NAME'.
             03 FILLER    PIC X(20) VALUE 'SERVER_PORT'.
             03 FILLER    PIC X(20) VALUE 'SERVER_PROTOCOL'.
             03 FILLER    PIC X(20) VALUE 'SERVER_SIGNATURE'.
             03 FILLER    PIC X(20) VALUE 'SERVER_SOFTWARE'.
          02 FILLER REDEFINES NAME-STRINGS.
             03 NAME-STRING   PIC X(20) OCCURS NAME-COUNT TIMES.
       LINKAGE SECTION.
       01 THE-QUERY PIC X(1600).  
       PROCEDURE DIVISION USING THE-QUERY.
         PERFORM VARYING NAME-INDEX FROM 1 BY 1
             UNTIL NAME-INDEX > NAME-COUNT
                 ACCEPT VALUE-STRING FROM ENVIRONMENT
                     NAME-STRING(NAME-INDEX)
                 END-ACCEPT
                 IF (NAME-STRING(NAME-INDEX) = "PATH_INFO")
                    MOVE VALUE-STRING TO THE-QUERY
                 END-IF   
         END-PERFORM.
       GOBACK.
       END PROGRAM GETQUERY.
       IDENTIFICATION DIVISION.
       PROGRAM-ID. SHOWVARS.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 CTR      PIC 99 USAGE COMP-5.
       LINKAGE SECTION.
       01 THE-VALUES.
          05 QUERY-VALUES           OCCURS 10 TIMES.
            10 QUERY-VALUE-NAME     PIC X(90).
            10 QUERY-VALUE          PIC X(90).
       PROCEDURE DIVISION USING THE-VALUES.
           DISPLAY "<TABLE CELLPADDING=10 BORDER=1 CELLSPACING=4 BGCOLOR=LIGHTGRAY>"
           PERFORM VARYING CTR FROM 1 BY 1
             UNTIL CTR > 10
               DISPLAY "<TR><TD>" QUERY-VALUE-NAME(CTR) "</TD><TD>" QUERY-VALUE(CTR) "</TD></TR>"
           END-PERFORM
           DISPLAY "</TABLE>"
       GOBACK.
       END PROGRAM SHOWVARS.
       IDENTIFICATION DIVISION.
       PROGRAM-ID. CHECKQUERY.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 CHOPPERY.
          05 CHOPPED-PATH-PIECES OCCURS 99 TIMES.                        
             10 CHOPPED-PATH-PIECE PIC X(80) VALUE SPACES. 
          05 CHOPPED-PATTERN-PIECES OCCURS 99 TIMES.
             10 CHOPPED-PATTERN-PIECE PIC X(80) VALUE SPACES.                           
       01 COUNTER       PIC S9(04) COMP. 
       01 POSITIO       PIC S9(04).                             
       01 TMP-POINTER      PIC S9(04) COMP VALUE +1. 
       01 TMP-POINTER2      PIC S9(04) COMP VALUE +1. 
       01 COUNTER-OF-VALUES      PIC S9(2).
       01 QUERY-ANALYSIS.
          05 QUERY-VALUES           OCCURS 10 TIMES.
            10 QUERY-VALUE-NAME     PIC X(90).
            10 QUERY-VALUE          PIC X(90).
       LINKAGE SECTION.
       01  THE-QUERY PIC X(255).
       01  THE-PATTERN PIC X(255).
       01  RESULT  PIC X(1).
       01 QUERY-ANALYSIS-OUT.
          05 QUERY-VALUES-OUT           OCCURS 10 TIMES.
            10 QUERY-VALUE-NAME-OUT     PIC X(90).
            10 QUERY-VALUE-OUT          PIC X(90).
       PROCEDURE DIVISION USING THE-QUERY THE-PATTERN RESULT QUERY-ANALYSIS-OUT.
          MOVE SPACES TO CHOPPERY.
          MOVE "Y" TO RESULT.
          MOVE 0 TO COUNTER-OF-VALUES.
           MOVE 1 TO TMP-POINTER.
           MOVE 1 TO TMP-POINTER2.
           PERFORM VARYING COUNTER FROM 2 BY 1 UNTIL COUNTER > 99   
           SUBTRACT 1 FROM COUNTER GIVING POSITIO
                UNSTRING THE-QUERY DELIMITED BY '/'          
                    INTO CHOPPED-PATH-PIECE(POSITIO)                    
                   WITH POINTER TMP-POINTER    
                UNSTRING THE-PATTERN DELIMITED BY '/'          
                    INTO CHOPPED-PATTERN-PIECE(POSITIO)                    
                   WITH POINTER TMP-POINTER2   
            END-PERFORM.
            MOVE 0 TO COUNTER.
            *> DISPLAY "<H3>" THE-QUERY " VS " THE-PATTERN "</H3>"
            PERFORM VARYING COUNTER FROM 1 BY 1 UNTIL COUNTER > 99 OR RESULT = "N"
                *> FOR FILLING ONLY ENTERED VALUES
                *> IF (CHOPPED-PATH-PIECE(COUNTER) EQUAL SPACES AND COUNTER>1)
                *>  DISPLAY "BREAK"
                *>  EXIT PERFORM
               *> ELSE
               *> DISPLAY COUNTER "::" RESULT " (" CHOPPED-PATH-PIECE(COUNTER) "/" CHOPPED-PATTERN-PIECE(COUNTER) ")<P>"
                 IF (CHOPPED-PATTERN-PIECE(COUNTER)(1:1) EQUAL "%")
                    ADD 1 TO COUNTER-OF-VALUES
                    MOVE CHOPPED-PATTERN-PIECE(COUNTER) TO QUERY-VALUE-NAME(COUNTER-OF-VALUES) 
                    MOVE CHOPPED-PATH-PIECE(COUNTER) TO QUERY-VALUE(COUNTER-OF-VALUES) 
                  *>  DISPLAY "GOT VAL " CHOPPED-PATTERN-PIECE(COUNTER) "<P>"
                 END-IF    
                IF 
                  (CHOPPED-PATH-PIECE(COUNTER) NOT EQUAL CHOPPED-PATTERN-PIECE(COUNTER) 
                    AND 
                    CHOPPED-PATTERN-PIECE(COUNTER)(1:1) NOT EQUAL "%") 
                MOVE "N" TO RESULT
               *> DISPLAY "<P><B>FAIL AT " COUNTER "</B> (" CHOPPED-PATH-PIECE(COUNTER) " :: "  CHOPPED-PATTERN-PIECE(COUNTER) ")</P>"
                END-IF
               *> END-IF
            END-PERFORM.
                IF (RESULT="Y") 
                    MOVE QUERY-ANALYSIS TO QUERY-ANALYSIS-OUT
                END-IF
       GOBACK.
       END PROGRAM CHECKQUERY.
*> ***********************************************
       IDENTIFICATION DIVISION.
       PROGRAM-ID. TEMPLATE.
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT READFILE
               ASSIGN TO READFILE-NAME
               FILE STATUS IS READFILE-STATUS
               ORGANIZATION IS LINE SEQUENTIAL.
       DATA DIVISION.
       FILE SECTION.
       FD  READFILE.
       01  READLINE PIC X(1024).
       WORKING-STORAGE SECTION.
       01  READFILE-NAME PIC X(255).
       01  READFILE-STATUS PIC X(2).
       01  TEMPLINE PIC X(1024).
       01  THE-VAR           PIC X(100).
       01  WHAT-WE-CHANGE    PIC X(100).
       01 COUNTER    PIC 9(4).
       LINKAGE SECTION.
       01 THE-VARS.
          03  COW-VARS OCCURS 99 TIMES.
            05 COW-VARNAME       PIC X(99).
            05 COW-VARVALUE      PIC X(99).
       01 TEMPLATE-FILENAME     PIC X(255).                 
       PROCEDURE DIVISION USING THE-VARS TEMPLATE-FILENAME.
       MOVE 
          FUNCTION CONCATENATE("VIEWS/",FUNCTION TRIM(TEMPLATE-FILENAME))
          TO READFILE-NAME.
       START-READFILE.
           OPEN INPUT READFILE
           CALL 'CHECKFILESTATUS' USING READFILE-NAME READFILE-STATUS
           READ READFILE
           PERFORM UNTIL READFILE-STATUS = '10'
           MOVE FUNCTION TRIM(READLINE) TO TEMPLINE
               PERFORM VARYING COUNTER FROM 1 BY 1 UNTIL COUNTER > 99
                   MOVE 
                      FUNCTION CONCATENATE(
                        '{{' FUNCTION TRIM(COW-VARNAME(COUNTER)) '}}'
                        )
                      TO 
                      WHAT-WE-CHANGE
                   MOVE
                      FUNCTION SUBSTITUTE(
                        TEMPLINE, 
                        FUNCTION TRIM(WHAT-WE-CHANGE), 
                        FUNCTION TRIM(COW-VARVALUE(COUNTER)))
                       TO TEMPLINE 
               END-PERFORM
               DISPLAY FUNCTION TRIM(TEMPLINE)
               READ READFILE
           END-PERFORM
           CLOSE READFILE.
       IDENTIFICATION DIVISION.
       PROGRAM-ID. CHECKFILESTATUS.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  STATUS-MESSAGE PIC X(72).
       01  DISPLAY-MESSAGE PIC X(72) VALUE SPACES.
       LINKAGE SECTION.
       01  FILE-NAME PIC X(64).
       01  FILE-STATUS PIC X(2).
       PROCEDURE DIVISION USING FILE-NAME FILE-STATUS.
       START-CHECKFILESTATUS.
           IF FILE-STATUS = '00'
               GOBACK
           END-IF
           EVALUATE FILE-STATUS
           WHEN 00 MOVE 'SUCCESS.' TO STATUS-MESSAGE   
           WHEN 02 MOVE 'SUCCESS DUPLICATE.' TO STATUS-MESSAGE 
           WHEN 04 MOVE 'SUCCESS INCOMPLETE.' TO STATUS-MESSAGE 
           WHEN 05 MOVE 'SUCCESS OPTIONAL.' TO STATUS-MESSAGE 
           WHEN 07 MOVE 'SUCCESS NO UNIT.' TO STATUS-MESSAGE 
           WHEN 10 MOVE 'END OF FILE.' TO STATUS-MESSAGE 
           WHEN 14 MOVE 'OUT OF KEY RANGE.' TO STATUS-MESSAGE 
           WHEN 21 MOVE 'KEY INVALID.' TO STATUS-MESSAGE 
           WHEN 22 MOVE 'KEY EXISTS.' TO STATUS-MESSAGE 
           WHEN 23 MOVE 'KEY NOT EXISTS.' TO STATUS-MESSAGE 
           WHEN 30 MOVE 'PERMANENT ERROR.' TO STATUS-MESSAGE 
           WHEN 31 MOVE 'INCONSISTENT FILENAME.' TO STATUS-MESSAGE 
           WHEN 34 MOVE 'BOUNDARY VIOLATION.' TO STATUS-MESSAGE 
           WHEN 35 MOVE 'FILE NOT FOUND.' TO STATUS-MESSAGE 
           WHEN 37 MOVE 'PERMISSION DENIED.' TO STATUS-MESSAGE 
           WHEN 38 MOVE 'CLOSED WITH LOCK.' TO STATUS-MESSAGE 
           WHEN 39 MOVE 'CONFLICT ATTRIBUTE.' TO STATUS-MESSAGE 
           WHEN 41 MOVE 'ALREADY OPEN.' TO STATUS-MESSAGE 
           WHEN 42 MOVE 'NOT OPEN.' TO STATUS-MESSAGE 
           WHEN 43 MOVE 'READ NOT DONE.' TO STATUS-MESSAGE 
           WHEN 44 MOVE 'RECORD OVERFLOW.' TO STATUS-MESSAGE 
           WHEN 46 MOVE 'READ ERROR.' TO STATUS-MESSAGE 
           WHEN 47 MOVE 'INPUT DENIED.' TO STATUS-MESSAGE 
           WHEN 48 MOVE 'OUTPUT DENIED.' TO STATUS-MESSAGE 
           WHEN 49 MOVE 'I/O DENIED.' TO STATUS-MESSAGE 
           WHEN 51 MOVE 'RECORD LOCKED.' TO STATUS-MESSAGE 
           WHEN 52 MOVE 'END-OF-PAGE.' TO STATUS-MESSAGE 
           WHEN 57 MOVE 'I/O LINAGE.' TO STATUS-MESSAGE 
           WHEN 61 MOVE 'FILE SHARING FAILURE.' TO STATUS-MESSAGE 
           WHEN 91 MOVE 'FILE NOT AVAILABLE.' TO STATUS-MESSAGE    
           END-EVALUATE
           STRING 'ERROR ' DELIMITED BY SIZE
               FILE-NAME DELIMITED BY SPACE
               SPACE DELIMITED BY SIZE
               STATUS-MESSAGE DELIMITED BY '.'
               INTO DISPLAY-MESSAGE
           DISPLAY DISPLAY-MESSAGE
           STOP RUN
           .
       END PROGRAM CHECKFILESTATUS.
       END PROGRAM TEMPLATE.
       END PROGRAM COW.